;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: USB_App_descr.asm
;;  Version: 1.50, Updated on 2011/6/28 at 6:8:6
;;  Generated by PSoC Designer 5.4.2946
;;
;;  DESCRIPTION: USB User Module Descriptors
;;
;;  NOTE: User Module APIs conform to the fastcall convention for marshalling
;;        arguments and observe the associated "Registers are volatile" policy.
;;        This means it is the caller's responsibility to preserve any values
;;        in the X and A registers that are still needed after the API
;;        function returns. Even though these registers may be preserved now,
;;        there is no guarantee they will be preserved in future releases.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "USB.inc"
include "USB_macros.inc"

WIZARD: equ 1
WIZARD_DEFINED_REPORT_STORAGE: equ 1
   ;--------------------------------------------------- 
   ;@PSoC_UserCode_BODY_1@ (Do not change this line.)
   ;---------------------------------------------------
   ; Insert your custom code below this banner
   ;---------------------------------------------------
   ; Redefine the WIZARD equate to 0 below by 
   ; uncommenting the WIZARD: equ 0 line 
   ; to allow your custom descriptor to take effect
   ;--------------------------------------------------- 

   ; WIZARD: equ 0
   ; WIZARD_DEFINED_REPORT_STORAGE: equ 0
   
   ;---------------------------------------------------
   ; Insert your custom code above this banner
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)

IF WIZARD
;-----------------------------------------------
; USB Descriptors--Generated by the USB Setup Wizard
;-----------------------------------------------
AREA  lit     (ROM,REL,CON)
;----------------------------------------------------------------------
; Descriptor Dispatch Tables
;   The following tables provide the dispatching pointers and
;   descriptor lengths necessary for the request handler to
;   respond to USB requests.
;----------------------------------------------------------------------

;----------------------------------------------------------------------
; Device Dispatch Table
;   for User Module: (USB)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_DEVICE_LOOKUP
.LITERAL
USB_DEVICE_LOOKUP:                               ;
EXPORT GLOBAL_APP_DEVICE_LOOKUP
GLOBAL_APP_DEVICE_LOOKUP:                        ;
  LT_START    1                                  ; Number of devices defined for USB
  LT_ENTRY    USB_D0_CONFIG_LOOKUP, USB_D0_CONFIG_DESCR_TABLE
.ENDLITERAL

;----------------------------------------------------------------------
; Configuration Dispatch Table
;   for Device: (USB_D0)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_D0_CONFIG_LOOKUP
.LITERAL
USB_D0_CONFIG_LOOKUP:                            ;
  LT_START    1                                  ; Number of configurations
  LT_ENTRY    USB_D0_C1_EP_SETUP, USB_D0_C1_INTERFACE_LOOKUP
.ENDLITERAL

;----------------------------------------------------------------------
; Interface Look Up Table
; 
; This look up table points to three tables.  Each of those tables is
; indexed by the selected interface number provided by the request.
;
; Item 0: HID Report GET_REPORT/SET_REPORT Lookup Table
; Item 1: HID Report Descriptor Transfer Descriptor Table
; Item 2: HID Class Descriptor Transfer Descriptor Table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_D0_C1_INTERFACE_LOOKUP
.LITERAL
USB_D0_C1_INTERFACE_LOOKUP:                      ;
  DW    USB_D0_C1_INTERFACE_RPT_LOOKUP           ; Interface GET_REPORT/SET_REPORT Lookup Table
  DW    USB_D0_C1_HID_RPT_DESCR_TABLE            ; HID Report Descriptor Transfer Descriptor Table
  DW    USB_D0_C1_HID_CLASS_DESCR_TABLE          ; HID Class Descriptor Transfer Descriptor Table
.ENDLITERAL

;----------------------------------------------------------------------
; Endpoint Setup Table
; 
; This table provides the data to configure the endpoint mode registers
; for IN/OUT direction.
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_C1_EP_SETUP:                              ;
  DB    USB_DIR_IN                               ; Endpoint EP1(IN)
  DB    USB_DIR_UNUSED                           ; Endpoint EP2 not used for this configuration
  DB    USB_DIR_UNUSED                           ; Endpoint EP3 not used for this configuration
  DB    USB_DIR_UNUSED                           ; Endpoint EP4 not used for this configuration
.ENDLITERAL

;----------------------------------------------------------------------
; Interface Lookup Table
; 
; This table is indexed by interface number.
;
;----------------------------------------------------------------------
EXPORT USB_D0_C1_INTERFACE_RPT_LOOKUP
.LITERAL
USB_D0_C1_INTERFACE_RPT_LOOKUP:                  ;
  DW    USB_D0_C1_I0_HID_RPT_LOOKUP              
.ENDLITERAL

;----------------------------------------------------------------------
; HID Class Descriptor transfer descriptor table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_D0_C1_HID_CLASS_DESCR_TABLE
.LITERAL
USB_D0_C1_HID_CLASS_DESCR_TABLE:                 ;
  TD_START_TABLE 1                               ; Number of interfaces/HID Class Descriptors
  TD_ENTRY       USB_DS_ROM, DESCR_SIZE_HID_CLASS, USB_D0_C1_I0_HID_DESCR_START, NULL_PTR
.ENDLITERAL

;----------------------------------------------------------------------
; HID Report Descriptor transfer descriptor table
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_D0_C1_HID_RPT_DESCR_TABLE
.LITERAL
USB_D0_C1_HID_RPT_DESCR_TABLE:                   ;
  TD_START_TABLE 1                               ; Number of interfaces/HID Report Descriptors
  TD_ENTRY       USB_DS_ROM, USB_HID_REPORT_1_DESCR_SIZE, USB_HID_REPORT_1_DESCR_START, NULL_PTR
.ENDLITERAL
;----------------------------------------------------------------------
; HID Report Lookup Table for (USB_D0_C1_I0)
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_C1_I0_HID_RPT_LOOKUP:                     
  LT_START    4                                  ; 4 Entries
  LT_ENTRY    USB_D0_C1_I0_IN_RPTS, NULL_PTR     ; IN Reports
  LT_ENTRY    USB_D0_C1_I0_OUT_RPTS, NULL_PTR    ; OUT Reports
  LT_ENTRY    USB_D0_C1_I0_FEATURE_RPTS, NULL_PTR; FEATURE Reports
.ENDLITERAL
;----------------------------------------------------------------------
; HID IN Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_C1_I0_IN_RPTS:                            
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USB_HID_RPT_1_IN_RPT_SIZE, USB_INTERFACE_0_IN_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID OUT Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_C1_I0_OUT_RPTS:                           
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USB_HID_RPT_1_OUT_RPT_SIZE, USB_INTERFACE_0_OUT_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; HID FEATURE Report Transfer Descriptor Table for ()
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_C1_I0_FEATURE_RPTS:                       
  TD_START_TABLE 1                               ; Only 1 Transfer Descriptor
  TD_ENTRY       USB_DS_RAM, USB_HID_RPT_1_FEATURE_RPT_SIZE, USB_INTERFACE_0_FEATURE_RPT_DATA, NULL_PTR
.ENDLITERAL
ENDIF ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------

;----------------------------------------------------------------------
; Configuration Descriptor Table
;  for (USB_D0)
;
;	This table provides transfer descriptors for each USB Configuration
; Descriptor
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_CONFIG_DESCR_TABLE:                       ;
  TD_START_TABLE 1                               ; Number of configurations
  TD_ENTRY       USB_DS_ROM, USB_D0_C1_DESCR_SIZE, USB_D0_C1_DESCR_START, NULL_PTR
.ENDLITERAL

;----------------------------------------------------------------------
; Device Descriptor Table
;
;	This table provides transfer descriptors for each USB Device Descriptor
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
EXPORT USB_DEVICE_DESCR_TABLE
.LITERAL
USB_DEVICE_DESCR_TABLE:                          
EXPORT GLOBAL_APP_DEVICE_DESCR_TABLE
GLOBAL_APP_DEVICE_DESCR_TABLE:                   
  TD_START_TABLE 1                               ; Number of devices
  TD_ENTRY       USB_DS_ROM, USB_D0_DESCR_SIZE, USB_D0_DESCR_START, NULL_PTR
.ENDLITERAL
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; Interface 0 RAM Allocation (Reused across configurations)
;----------------------------------------------------------------------
IF WIZARD_DEFINED_REPORT_STORAGE
AREA  InterruptRAM     (RAM,REL,CON)
;----------------------------------------------------------------------
; RAM allocation for IN Reports.
;----------------------------------------------------------------------
EXPORT _USB_INTERFACE_0_IN_RPT_DATA
EXPORT USB_INTERFACE_0_IN_RPT_DATA
_USB_INTERFACE_0_IN_RPT_DATA:                    
USB_INTERFACE_0_IN_RPT_DATA:                     
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for OUT Reports.
;----------------------------------------------------------------------
EXPORT _USB_INTERFACE_0_OUT_RPT_DATA
EXPORT USB_INTERFACE_0_OUT_RPT_DATA
_USB_INTERFACE_0_OUT_RPT_DATA:                   
USB_INTERFACE_0_OUT_RPT_DATA:                    
  BLK  8                                         ;
;----------------------------------------------------------------------
; RAM allocation for FEATURE Reports.
;----------------------------------------------------------------------
EXPORT _USB_INTERFACE_0_FEATURE_RPT_DATA
EXPORT USB_INTERFACE_0_FEATURE_RPT_DATA
_USB_INTERFACE_0_FEATURE_RPT_DATA:               
USB_INTERFACE_0_FEATURE_RPT_DATA:                
  BLK  8                                         ;
;----------------------------------------------------------------------
ENDIF  ; WIZARD_DEFINED_REPORT_STORAGE
;----------------------------------------------------------------------
; Device Descriptor (USB_D0)
; This marks the beginning of the Device Descriptor.  This descriptor
; concatenates all of the descriptors in the following format:
;	Device Descriptor
;		Configuration Descriptor (1)
;	  	Interface 1 Descriptor
;				HID Descriptor 1
;			  	Endpoint Descriptor(s)
;			Interface 2 Descriptor
;				HID Descriptor 2
;					Endpoint Descriptor(s)
;		Configuration Descriptor (2)
;			Interface/HID/Endpoint...
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_D0_DESCR_START:                              ;
  DB    18                                       ; Device Descriptor Length (18)
  DB    1                                        ; bDescriptorType: DEVICE
  DWL   0200H                                    ; bcdUSB (ver 2.0)
  DB    0                                        ; bDeviceClass
  DB    0                                        ; bDeviceSubClass 
  DB    0                                        ; bDeviceProtocol 
  DB    8                                        ; bMaxPacketSize0
  DWL   21FBH                                    ; idVendor
  DWL   0001H                                    ; idProduct
  DWL   0100H                                    ; bcdDevice
  DB    STR_HASH_2                               ; iManufacturer
  DB    STR_HASH_3                               ; iProduct
  DB    STR_HASH_4                               ; iSerialNumber
  DB    1                                        ; bNumConfigurations
USB_D0_DESCR_END:                                ;
USB_D0_DESCR_SIZE:  EQU    USB_D0_DESCR_END - USB_D0_DESCR_START

;----------------------------------------------------------------------
; Configuration Descriptor (USB_D0_C1)
; This marks the beginning of the Configuration Descriptor.  This descriptor
; concatenates all of the descriptors in the following format:
; Configuration Descriptor
;	Interface 1 Descriptor
;		HID Descriptor 1
;			Endpoint Descriptor(s)
;	Interface 2 Descriptor
;		HID Descriptor 2
;			Endpoint Descriptor(s)
;----------------------------------------------------------------------
USB_D0_C1_DESCR_START:                           ;
  DB    9                                        ; Configuration Descriptor Length (9)
  DB    2                                        ; bDescriptorType: CONFIGURATION
  DWL   USB_D0_C1_DESCR_SIZE                     ; wTotalLength
  DB    1                                        ; bNumInterfaces
  DB    1                                        ; bConfigurationValue
  DB    STR_HASH_0                               ; iConfiguration
  DB    80H | (0 << 6) | (0 << 5)                ; bmAttributes >
  DB    250                                      ; bMaxPower
;----------------------------------------------------------------------
; Interface Descriptor (USB_D0_C1_I0)
;----------------------------------------------------------------------
  DB    9                                        ; Interface Descriptor Length (9)
  DB    4                                        ; bDescriptorType: INTERFACE
  DB    0                                        ; bInterfaceNumber (zero based)
  DB    0                                        ; bAlternateSetting
  DB    1                                        ; bNumEndpoints
  DB    3                                        ; bInterfaceClass
  DB    0                                        ; bInterfaceSubClass
  DB    0                                        ; bInterfaceProtocol
  DB    STR_HASH_0                               ; iInterface
;----------------------------------------------------------------------
; HID Class Descriptor (USB_D0_C1_I0)
;----------------------------------------------------------------------
USB_D0_C1_I0_HID_DESCR_START:                    
  DB    9                                        ; bLength--HID Class Descriptor Length (9)
  DB    0x21                                     ; bDescriptorType: HID Class
  DWL   0x0111                                   ; bcdHID
  DB    0                                        ; bCountryCode
  DB    1                                        ; bNumDescriptors
  DB    34                                       ; bDescriptorType
  DWL   USB_HID_REPORT_1_DESCR_SIZE              ; wDescriptorLength
;----------------------------------------------------------------------
; Endpoint Descriptor (USB_D0_C1_I0_E0)
;----------------------------------------------------------------------
  DB    7                                        ; Endpoint Descriptor Length (7)
  DB    5                                        ; bDescriptorType: ENDPOINT
  DB    (EP1 | USB_DIR_IN)                       ; bEndpointAddress
  DB    3                                        ; bmAttributes
  DWL   8                                        ; wMaxPacketSize
  DB    1                                        ; bInterval
;----------------------------------------------------------------------
USB_D0_C1_DESCR_END:
USB_D0_C1_DESCR_SIZE:	EQU	(USB_D0_C1_DESCR_END - USB_D0_C1_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; HID Class Report Descriptors
;
; This section contains the HID Class Report Descriptors generated
; by the USB User Module Descriptor Generator
;
;----------------------------------------------------------------------
; HID Report Descriptor (HID_RPT_1}
;----------------------------------------------------------------------
AREA  lit     (ROM,REL,CON)
.LITERAL
USB_HID_REPORT_1_DESCR_START:                    ;
    DB     06H, 00H, FFH                         ; Usage Page
    DB     09H, 01H                              ; Usage
    DB     A1H, 01H                              ; Collection
    DB     19H, 01H                              ; Usage Minimum
    DB     29H, 02H                              ; Usage Maximum
    DB     15H, 00H                              ; Logical Minimum
    DB     25H, FFH                              ; Logical Maximum
    DB     75H, 08H                              ; Report Size
    DB     95H, 08H                              ; Report Count
    DB     81H, 02H                              ; Input
    DB     19H, 01H                              ; Usage Minimum
    DB     29H, 02H                              ; Usage Maximum
    DB     91H, 02H                              ; Output
    DB     C0H                                   ; End Collection
USB_HID_REPORT_1_DESCR_END:                      ;
USB_HID_REPORT_1_DESCR_SIZE:  EQU    (USB_HID_REPORT_1_DESCR_END - USB_HID_REPORT_1_DESCR_START)
.ENDLITERAL
;----------------------------------------------------------------------
; End HID Report Descriptor (HID_RPT_1}
;----------------------------------------------------------------------
; HID Report Sizes (HID_RPT_1}
;----------------------------------------------------------------------
USB_HID_RPT_1_IN_RPT_SIZE:  EQU    8             ; TODO: Optimize report size
;----------------------------------------------------------------------
USB_HID_RPT_1_OUT_RPT_SIZE:  EQU    8            ; TODO: Optimize report size
;----------------------------------------------------------------------
USB_HID_RPT_1_FEATURE_RPT_SIZE:  EQU    0        ; No FEATURE Reports are defined.  Size set to 0.
;----------------------------------------------------------------------
;----------------------------------------------------------------------
; USB String Descriptors
;
; This section contains the USB String Descriptors generated
; by the USB User Module Descriptor Generator
;
; Note:  The string labels are internally generated by the
; descriptor generator
;
; Descriptors that reference string descriptors, use a hashed
; symbol that is set in an EQU directive with each string
; descriptor.
;----------------------------------------------------------------------
STR_HASH_0:  EQU    0                            ; String Hash for the null string
AREA  func_lit     (ROM,REL,CON)
EXPORT USB_StringTable
EXPORT GLOBAL_USB_StringTable
.LITERAL
USB_StringTable:                                 
GLOBAL_USB_StringTable:                          
  TD_START_TABLE 4                               ; Number of USB Strings
  TD_ENTRY       USB_DS_ROM, LANGID_DESCR_SIZE, LANGID_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_2_DESCR_SIZE, STRING_2_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_3_DESCR_SIZE, STRING_3_DESCR_START, NULL_PTR
  TD_ENTRY       USB_DS_ROM, STRING_4_DESCR_SIZE, STRING_4_DESCR_START, NULL_PTR
;----------------------------------------------------------------------
; LANGID Descriptor
;----------------------------------------------------------------------
LANGID_DESCR_START:                              
  DB    ((1 * 2) + 2)                            ; bLength (N+2)
  DB    3                                        ; bDescriptorType (STRING)
  DWL   1033                                     ;
LANGID_DESCR_END:                                
LANGID_DESCR_SIZE:  EQU    (LANGID_DESCR_END - LANGID_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_2:  EQU    1                            ; String Hash
STRING_2_DESCR_START:                            
  DB    STRING_2_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "Helios"                                 ;
STRING_2_DESCR_END:                              
STRING_2_DESCR_SIZE:  EQU    (STRING_2_DESCR_END - STRING_2_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_3:  EQU    2                            ; String Hash
STRING_3_DESCR_START:                            
  DB    STRING_3_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "Chameleon"                              ;
STRING_3_DESCR_END:                              
STRING_3_DESCR_SIZE:  EQU    (STRING_3_DESCR_END - STRING_3_DESCR_START)
;----------------------------------------------------------------------
; String Desciptor
;----------------------------------------------------------------------
STR_HASH_4:  EQU    3                            ; String Hash
STRING_4_DESCR_START:                            
  DB    STRING_4_DESCR_SIZE                      ; bLength
  DB    3                                        ; bDescriptorType (STRING)
  DSU   "Version 1.1"                            ;
STRING_4_DESCR_END:                              
STRING_4_DESCR_SIZE:  EQU    (STRING_4_DESCR_END - STRING_4_DESCR_START)
.ENDLITERAL

;-----------------------------------------------
; End of Application Descriptors
;-----------------------------------------------

ENDIF
   ;---------------------------------------------------
   ;@PSoC_UserCode_BODY_2@ (Do not change this line.)
   ;---------------------------------------------------
   ; Redefine your descriptor table below. You might
   ; cut and paste code from the WIZARD descriptor
   ; above and then make your changes.
   ;---------------------------------------------------

   
   ;---------------------------------------------------
   ; Insert your custom code above this banner
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)
; End of File USB_descr.asm
